#!/bin/bash

# running kubernetes some based on the comments below
kubeadm init --apiserver-advertise-address=$(curl "http://169.254.169.254/latest/meta-data/local-ipv4") --ignore-preflight-errors all

#for regular user
runuser -l ubuntu -c 'mkdir -p /home/ubuntu/.kube'
sudo cp -i /etc/kubernetes/admin.conf /home/ubuntu/.kube/config
sudo chown 1000:1000 /home/ubuntu/.kube/config

#for root user
export KUBECONFIG=/etc/kubernetes/admin.conf



# adding weave network plugin
sudo -u ubuntu bash << EOF
kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
EOF



# more requirements

# 1. install docker - might need adjustment in the version

# 2. as long as running k8s without minimum requirements the command will be kubeadm init --ignore-preflight-errors all

# 3. run this as the user:
  # mkdir -p $HOME/.kube
  # sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  # sudo chown $(id -u):$(id -g) $HOME/.kube/config


# 3. adding the weave network plugin kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

# 4. need to check this kubeadm join 10.0.1.41:6443 --token dm815q.f89ffv9io2nufojq --discovery-token-ca-cert-hash sha256:331722f0937e96dee787472aafe2d98faa6059abb321ba2263192f4a5c213bd5
	# kubeadm token list
	# openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | \openssl dgst -sha256 -hex | sed 's/^.* //'

# 5. some commands
	# kubectl get pods --all-namespaces
	# kubectl get nodes
	
# 6. more for kubeadm init
	# kubeadm init --apiserver-advertise-address=$(curl "http://169.254.169.254/latest/meta-data/local-ipv4") --ignore-preflight-errors all --pod-network-cidr=192.168.0.0/24
	
# 7. label the node
	# kubectl label nodes <your-node-name> Destiny=SpreeApp
	
# 8. getting worker node info
	# x=$(kubectl get nodes | tail -n1)
	# x2=${x# }
	# x3=$(echo $x2 | cut -d ' ' -f1)
	# kubectl label nodes $x3 Destiny=SpreeApp

# 9. applying the yml
	# kubectl create -f ymlfile.yml
	
